name: Create and publish a Docker image

on:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  nginx-phpfpm:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta_nginx
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-nginx

      - name: Build Nginx Docker image, don't push it
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: Dockerfile-nginx
          load: true
          tags: ${{ steps.meta_nginx.outputs.tags }}
          labels: ${{ steps.meta_nginx.outputs.labels }}

      - name: Download manifest file from container
        run: |
          mkdir -p public/build/
          id=$(docker create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-nginx:main)
          docker cp $id:/srv/web/public/build/manifest.json public/build/manifest.json
          docker cp $id:/srv/web/public/build/entrypoint.json public/build/entrypoint.json
          docker rm -v $id

      - name: Push Nginx Docker image to registry
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: Dockerfile-nginx
          push: true
          tags: ${{ steps.meta_nginx.outputs.tags }}
          labels: ${{ steps.meta_nginx.outputs.labels }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta_phpfpm
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-phpfpm

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: Dockerfile-phpfpm
          push: true
          tags: ${{ steps.meta_phpfpm.outputs.tags }}
          labels: ${{ steps.meta_phpfpm.outputs.labels }}